diff --git a/src/cudadecoderbin/batched-wav-nnet3-cuda-online.cc b/src/cudadecoderbin/batched-wav-nnet3-cuda-online.cc
index 2d703e9..b174262 100644
--- a/src/cudadecoderbin/batched-wav-nnet3-cuda-online.cc
+++ b/src/cudadecoderbin/batched-wav-nnet3-cuda-online.cc
@@ -46,7 +46,6 @@ using namespace kaldi::cuda_decoder;
 using namespace fst;
 using CorrelationID = CudaOnlinePipelineDynamicBatcher::CorrelationID;
 
-typedef int64 int64;
 
 struct Stream {
   std::shared_ptr<WaveData> wav;
diff --git a/src/cudafeatbin/compute-online-feats-cuda.cc b/src/cudafeatbin/compute-online-feats-cuda.cc
index f5fd8db..a94a281 100644
--- a/src/cudafeatbin/compute-online-feats-cuda.cc
+++ b/src/cudafeatbin/compute-online-feats-cuda.cc
@@ -27,7 +27,6 @@
 
 int main(int argc, char *argv[]) {
   using namespace kaldi;
-  typedef int64 int64;
   try {
     const char *usage =
       "Extract features and ivectors for utterances using the cuda online\n"
diff --git a/src/fgmmbin/fgmm-global-est.cc b/src/fgmmbin/fgmm-global-est.cc
index 0465e10..e74abb8 100644
--- a/src/fgmmbin/fgmm-global-est.cc
+++ b/src/fgmmbin/fgmm-global-est.cc
@@ -25,7 +25,6 @@
 int main(int argc, char *argv[]) {
   try {
     using namespace kaldi;
-    typedef int32 int32;
     MleFullGmmOptions gmm_opts;
 
     const char *usage =
diff --git a/src/fgmmbin/fgmm-global-init-from-accs.cc b/src/fgmmbin/fgmm-global-init-from-accs.cc
index 70b43e0..7024eb8 100644
--- a/src/fgmmbin/fgmm-global-init-from-accs.cc
+++ b/src/fgmmbin/fgmm-global-init-from-accs.cc
@@ -27,7 +27,6 @@
 int main(int argc, char *argv[]) {
   try {
     using namespace kaldi;
-    typedef int32 int32;
     MleFullGmmOptions gmm_opts;
 
     const char *usage =
diff --git a/src/gmmbin/gmm-acc-stats2.cc b/src/gmmbin/gmm-acc-stats2.cc
index cc991e0..16142e3 100644
--- a/src/gmmbin/gmm-acc-stats2.cc
+++ b/src/gmmbin/gmm-acc-stats2.cc
@@ -28,7 +28,6 @@
 
 int main(int argc, char *argv[]) {
   using namespace kaldi;
-  typedef int64 int64;
   try {
     const char *usage =
         "Accumulate stats for GMM training (from posteriors)\n"
diff --git a/src/ivectorbin/ivector-compute-dot-products.cc b/src/ivectorbin/ivector-compute-dot-products.cc
index 2648143..010a3a9 100644
--- a/src/ivectorbin/ivector-compute-dot-products.cc
+++ b/src/ivectorbin/ivector-compute-dot-products.cc
@@ -27,7 +27,6 @@
 
 int main(int argc, char *argv[]) {
   using namespace kaldi;
-  typedef int64 int64;
   try {
     const char *usage =
         "Computes dot-products between iVectors; useful in application of an\n"
diff --git a/src/ivectorbin/ivector-extract-online.cc b/src/ivectorbin/ivector-extract-online.cc
index cd000b9..80bfe9e 100644
--- a/src/ivectorbin/ivector-extract-online.cc
+++ b/src/ivectorbin/ivector-extract-online.cc
@@ -26,7 +26,6 @@
 
 int main(int argc, char *argv[]) {
   using namespace kaldi;
-  typedef int64 int64;
   try {
     const char *usage =
         "Extract iVectors for utterances, using a trained iVector extractor,\n"
diff --git a/src/ivectorbin/ivector-extract.cc b/src/ivectorbin/ivector-extract.cc
index 145c971..73070ed 100644
--- a/src/ivectorbin/ivector-extract.cc
+++ b/src/ivectorbin/ivector-extract.cc
@@ -209,7 +209,6 @@ int32 RunPerSpeaker(const std::string &ivector_extractor_rxfilename,
 
 int main(int argc, char *argv[]) {
   using namespace kaldi;
-  typedef int64 int64;
   try {
     const char *usage =
         "Extract iVectors for utterances, using a trained iVector extractor,\n"
diff --git a/src/ivectorbin/ivector-extractor-acc-stats.cc b/src/ivectorbin/ivector-extractor-acc-stats.cc
index 1177d17..c80d9c5 100644
--- a/src/ivectorbin/ivector-extractor-acc-stats.cc
+++ b/src/ivectorbin/ivector-extractor-acc-stats.cc
@@ -61,7 +61,6 @@ class IvectorTask {
 
 int main(int argc, char *argv[]) {
   using namespace kaldi;
-  typedef int64 int64;
   try {
     const char *usage =
         "Accumulate stats for iVector extractor training\n"
diff --git a/src/latbin/lattice-add-penalty.cc b/src/latbin/lattice-add-penalty.cc
index bc03937..eb4d6c0 100644
--- a/src/latbin/lattice-add-penalty.cc
+++ b/src/latbin/lattice-add-penalty.cc
@@ -22,7 +22,6 @@
 
 int main(int argc, char *argv[]) {
   using namespace kaldi;
-  typedef int64 int64;
   try {
     const char *usage =
         "Add word insertion penalty to the lattice.\n"
diff --git a/src/nnet2bin/nnet-relabel-egs.cc b/src/nnet2bin/nnet-relabel-egs.cc
index 715f62c..d3fe1f1 100644
--- a/src/nnet2bin/nnet-relabel-egs.cc
+++ b/src/nnet2bin/nnet-relabel-egs.cc
@@ -54,7 +54,6 @@ int main(int argc, char *argv[]) {
   using namespace kaldi;
   using namespace kaldi::nnet2;
 
-  typedef int64 int64;
   try {
     const char *usage =
         "Relabel neural network egs with the read pdf-id alignments, "
diff --git a/src/online/online-tcp-source.cc b/src/online/online-tcp-source.cc
index 8421073..8529938 100644
--- a/src/online/online-tcp-source.cc
+++ b/src/online/online-tcp-source.cc
@@ -24,8 +24,6 @@
 
 namespace kaldi {
 
-typedef int32 int32;
-
 OnlineTcpVectorSource::OnlineTcpVectorSource(int32 socket)
     : socket_desc(socket),
       connected(true),
diff --git a/src/online2bin/ivector-extract-online2.cc b/src/online2bin/ivector-extract-online2.cc
index 3ae649e..c4de287 100644
--- a/src/online2bin/ivector-extract-online2.cc
+++ b/src/online2bin/ivector-extract-online2.cc
@@ -27,7 +27,6 @@
 
 int main(int argc, char *argv[]) {
   using namespace kaldi;
-  typedef int64 int64;
   try {
     const char *usage =
         "Extract iVectors for utterances every --ivector-period frames, using a trained\n"
